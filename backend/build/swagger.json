{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Gender": {
				"enum": [
					"m",
					"f",
					"o"
				],
				"type": "string"
			},
			"Role": {
				"enum": [
					"super_admin",
					"artist_manager",
					"artist"
				],
				"type": "string"
			},
			"Pick_IUser.Exclude_keyofIUser.id-or-created_at-or-updated_at__": {
				"properties": {
					"first_name": {
						"type": "string"
					},
					"last_name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"dob": {
						"type": "string"
					},
					"gender": {
						"$ref": "#/components/schemas/Gender"
					},
					"address": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					}
				},
				"required": [
					"first_name",
					"last_name",
					"email",
					"password",
					"phone",
					"dob",
					"gender",
					"address",
					"role"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_IUser.id-or-created_at-or-updated_at_": {
				"$ref": "#/components/schemas/Pick_IUser.Exclude_keyofIUser.id-or-created_at-or-updated_at__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IUserInput": {
				"$ref": "#/components/schemas/Omit_IUser.id-or-created_at-or-updated_at_"
			},
			"Partial_IUserInput_": {
				"properties": {
					"first_name": {
						"type": "string"
					},
					"last_name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"dob": {
						"type": "string"
					},
					"gender": {
						"$ref": "#/components/schemas/Gender"
					},
					"address": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"IUserOptional": {
				"$ref": "#/components/schemas/Partial_IUserInput_"
			},
			"IUser": {
				"properties": {
					"id": {
						"type": "string"
					},
					"first_name": {
						"type": "string"
					},
					"last_name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"dob": {
						"type": "string"
					},
					"gender": {
						"$ref": "#/components/schemas/Gender"
					},
					"address": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"created_at": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"first_name",
					"last_name",
					"email",
					"password",
					"phone",
					"dob",
					"gender",
					"address",
					"role",
					"created_at",
					"updated_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Genre": {
				"enum": [
					"rnb",
					"country",
					"classic",
					"rock",
					"jazz"
				],
				"type": "string"
			},
			"Pick_IMusicInput.Exclude_keyofIMusicInput.artist_id__": {
				"properties": {
					"title": {
						"type": "string"
					},
					"album_name": {
						"type": "string"
					},
					"genre": {
						"$ref": "#/components/schemas/Genre"
					}
				},
				"required": [
					"title",
					"album_name",
					"genre"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_IMusicInput.artist_id_": {
				"$ref": "#/components/schemas/Pick_IMusicInput.Exclude_keyofIMusicInput.artist_id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IArtist": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"dob": {
						"type": "string"
					},
					"gender": {
						"$ref": "#/components/schemas/Gender"
					},
					"first_release_year": {
						"type": "number",
						"format": "double"
					},
					"no_of_albums_released": {
						"type": "number",
						"format": "double"
					},
					"created_at": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"dob",
					"gender",
					"first_release_year",
					"no_of_albums_released",
					"created_at",
					"updated_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Pick_IMusicInput.artist_id__": {
				"properties": {
					"artist_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/IArtist"
							}
						]
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"IMuiscExcludeArtist": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_IMusicInput.artist_id_"
					},
					{
						"$ref": "#/components/schemas/Partial_Pick_IMusicInput.artist_id__"
					}
				]
			},
			"Partial_IMusicInput_": {
				"properties": {
					"title": {
						"type": "string"
					},
					"album_name": {
						"type": "string"
					},
					"genre": {
						"$ref": "#/components/schemas/Genre"
					},
					"artist_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/IArtist"
							}
						]
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"IMusicOptional": {
				"$ref": "#/components/schemas/Partial_IMusicInput_"
			},
			"IMusic": {
				"properties": {
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"album_name": {
						"type": "string"
					},
					"genre": {
						"$ref": "#/components/schemas/Genre"
					},
					"artist_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/IArtist"
							}
						]
					},
					"created_at": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"title",
					"album_name",
					"genre",
					"artist_id",
					"created_at",
					"updated_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IArtist.Exclude_keyofIArtist.id-or-created_at-or-updated_at__": {
				"properties": {
					"dob": {
						"type": "string"
					},
					"gender": {
						"$ref": "#/components/schemas/Gender"
					},
					"name": {
						"type": "string"
					},
					"first_release_year": {
						"type": "number",
						"format": "double"
					},
					"no_of_albums_released": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"dob",
					"gender",
					"name",
					"first_release_year",
					"no_of_albums_released"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_IArtist.id-or-created_at-or-updated_at_": {
				"$ref": "#/components/schemas/Pick_IArtist.Exclude_keyofIArtist.id-or-created_at-or-updated_at__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IArtistInput": {
				"$ref": "#/components/schemas/Omit_IArtist.id-or-created_at-or-updated_at_"
			},
			"Partial_IArtistInput_": {
				"properties": {
					"dob": {
						"type": "string"
					},
					"gender": {
						"$ref": "#/components/schemas/Gender"
					},
					"name": {
						"type": "string"
					},
					"first_release_year": {
						"type": "number",
						"format": "double"
					},
					"no_of_albums_released": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"IArtistOptional": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Partial_IArtistInput_"
					},
					{
						"properties": {
							"user": {}
						},
						"type": "object"
					}
				]
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header",
				"description": "Enter token for User"
			}
		}
	},
	"info": {
		"title": "backend",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/user/register": {
			"post": {
				"operationId": "RegisterUser",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserInput"
							}
						}
					}
				}
			}
		},
		"/user/login": {
			"post": {
				"operationId": "LoginUser",
				"responses": {
					"200": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"password": {
										"type": "string"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"password",
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/user/update/{userId}": {
			"patch": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Updated",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [
					{
						"jwt": [
							"super_admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserOptional"
							}
						}
					}
				}
			}
		},
		"/user/delete/{userId}": {
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Deleted",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [
					{
						"jwt": [
							"super_admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Fetched",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [
					{
						"jwt": [
							"super_admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "rowsPerPage",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/user/userDetails": {
			"get": {
				"operationId": "GetUserDetails",
				"responses": {
					"200": {
						"description": "Fetched",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"$ref": "#/components/schemas/IUser"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [
					{
						"jwt": [
							"super_admin",
							"artist",
							"artist_manager"
						]
					}
				],
				"parameters": []
			}
		},
		"/music/create": {
			"post": {
				"operationId": "CreateMusic",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"music"
				],
				"security": [
					{
						"jwt": [
							"artist"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IMuiscExcludeArtist"
							}
						}
					}
				}
			}
		},
		"/music/update/{musicId}": {
			"patch": {
				"operationId": "UpdateMusic",
				"responses": {
					"200": {
						"description": "Updated",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"music"
				],
				"security": [
					{
						"jwt": [
							"artist"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "musicId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IMusicOptional"
							}
						}
					}
				}
			}
		},
		"/music/delete/{musicId}": {
			"delete": {
				"operationId": "DeleteMusic",
				"responses": {
					"200": {
						"description": "Deleted",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"music"
				],
				"security": [
					{
						"jwt": [
							"artist"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "musicId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/music/{artistId}": {
			"get": {
				"operationId": "GetArtistMusic",
				"responses": {
					"200": {
						"description": "Fetched",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"items": {
												"$ref": "#/components/schemas/IMusic"
											},
											"type": "array"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"music"
				],
				"security": [
					{
						"jwt": [
							"super_admin",
							"artist_manager",
							"artist"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "artistId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/music": {
			"get": {
				"operationId": "GetMusic",
				"responses": {
					"200": {
						"description": "Fetched",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"music"
				],
				"security": [
					{
						"jwt": [
							"super_admin",
							"artist_manager",
							"artist"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "rowsPerPage",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/artist/create": {
			"post": {
				"operationId": "CreateArtist",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"artist"
				],
				"security": [
					{
						"jwt": [
							"artist_manager"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IArtistInput"
							}
						}
					}
				}
			}
		},
		"/artist/update/{artistId}": {
			"patch": {
				"operationId": "UpdateArtist",
				"responses": {
					"200": {
						"description": "Updated",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"artist"
				],
				"security": [
					{
						"jwt": [
							"artist_manager"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "artistId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IArtistOptional"
							}
						}
					}
				}
			}
		},
		"/artist/delete/{artistId}": {
			"delete": {
				"operationId": "DeleteArtist",
				"responses": {
					"200": {
						"description": "Deleted",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"artist"
				],
				"security": [
					{
						"jwt": [
							"artist_manager"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "artistId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/artist": {
			"get": {
				"operationId": "GetArtist",
				"responses": {
					"200": {
						"description": "Fetched",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"artist"
				],
				"security": [
					{
						"jwt": [
							"super_admin",
							"artist_manager"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "rowsPerPage",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:8000/"
		}
	]
}